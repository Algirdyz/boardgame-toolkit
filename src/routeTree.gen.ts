/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TemplatesIndexRouteImport } from './routes/templates/index'
import { Route as GlobalsIndexRouteImport } from './routes/globals/index'
import { Route as ComponentsIndexRouteImport } from './routes/components/index'
import { Route as TemplatesTemplateIdRouteImport } from './routes/templates/$templateId'
import { Route as ComponentsComponentIdRouteImport } from './routes/components/$componentId'

const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TemplatesIndexRoute = TemplatesIndexRouteImport.update({
  id: '/templates/',
  path: '/templates/',
  getParentRoute: () => rootRouteImport,
} as any)
const GlobalsIndexRoute = GlobalsIndexRouteImport.update({
  id: '/globals/',
  path: '/globals/',
  getParentRoute: () => rootRouteImport,
} as any)
const ComponentsIndexRoute = ComponentsIndexRouteImport.update({
  id: '/components/',
  path: '/components/',
  getParentRoute: () => rootRouteImport,
} as any)
const TemplatesTemplateIdRoute = TemplatesTemplateIdRouteImport.update({
  id: '/templates/$templateId',
  path: '/templates/$templateId',
  getParentRoute: () => rootRouteImport,
} as any)
const ComponentsComponentIdRoute = ComponentsComponentIdRouteImport.update({
  id: '/components/$componentId',
  path: '/components/$componentId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/components/$componentId': typeof ComponentsComponentIdRoute
  '/templates/$templateId': typeof TemplatesTemplateIdRoute
  '/components': typeof ComponentsIndexRoute
  '/globals': typeof GlobalsIndexRoute
  '/templates': typeof TemplatesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/components/$componentId': typeof ComponentsComponentIdRoute
  '/templates/$templateId': typeof TemplatesTemplateIdRoute
  '/components': typeof ComponentsIndexRoute
  '/globals': typeof GlobalsIndexRoute
  '/templates': typeof TemplatesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/components/$componentId': typeof ComponentsComponentIdRoute
  '/templates/$templateId': typeof TemplatesTemplateIdRoute
  '/components/': typeof ComponentsIndexRoute
  '/globals/': typeof GlobalsIndexRoute
  '/templates/': typeof TemplatesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/components/$componentId'
    | '/templates/$templateId'
    | '/components'
    | '/globals'
    | '/templates'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/components/$componentId'
    | '/templates/$templateId'
    | '/components'
    | '/globals'
    | '/templates'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/components/$componentId'
    | '/templates/$templateId'
    | '/components/'
    | '/globals/'
    | '/templates/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ComponentsComponentIdRoute: typeof ComponentsComponentIdRoute
  TemplatesTemplateIdRoute: typeof TemplatesTemplateIdRoute
  ComponentsIndexRoute: typeof ComponentsIndexRoute
  GlobalsIndexRoute: typeof GlobalsIndexRoute
  TemplatesIndexRoute: typeof TemplatesIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/templates/': {
      id: '/templates/'
      path: '/templates'
      fullPath: '/templates'
      preLoaderRoute: typeof TemplatesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/globals/': {
      id: '/globals/'
      path: '/globals'
      fullPath: '/globals'
      preLoaderRoute: typeof GlobalsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/components/': {
      id: '/components/'
      path: '/components'
      fullPath: '/components'
      preLoaderRoute: typeof ComponentsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/templates/$templateId': {
      id: '/templates/$templateId'
      path: '/templates/$templateId'
      fullPath: '/templates/$templateId'
      preLoaderRoute: typeof TemplatesTemplateIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/components/$componentId': {
      id: '/components/$componentId'
      path: '/components/$componentId'
      fullPath: '/components/$componentId'
      preLoaderRoute: typeof ComponentsComponentIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ComponentsComponentIdRoute: ComponentsComponentIdRoute,
  TemplatesTemplateIdRoute: TemplatesTemplateIdRoute,
  ComponentsIndexRoute: ComponentsIndexRoute,
  GlobalsIndexRoute: GlobalsIndexRoute,
  TemplatesIndexRoute: TemplatesIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
